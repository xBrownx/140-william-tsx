import { cva, VariantProps } from 'class-variance-authority';import React from 'react';import { cn } from '@/utils/cn';const sectionVariants = cva(    [        'flex',        'md:min-h-screen',        'w-screen',        'items-center',        'justify-center',        'md:py-16',        'pt-16',    ],    {        variants: {            background: {                default: 'bg-background-primary',                primary: 'bg-background-primary',                secondary: 'bg-background-secondary',            },        },        defaultVariants: {            background: 'default',        },    },);const splitVariants = cva(    [        'box-border',        'flex',        'md:h-[50.875rem]',        'md:w-[70rem]',        'md:gap-32',        'md:flex-row',        'flex-col',        'gap-8',    ],    {        variants: {            order: {                hero: '',            },        },        defaultVariants: {            order: 'hero',        },    },);type SplitScreenLayoutProps = VariantProps<typeof sectionVariants> &    VariantProps<typeof splitVariants> & {        pageRef: React.LegacyRef<HTMLElement>;        leftContent: React.ReactNode;        rightContent: React.ReactNode;    };export const SplitScreenLayout: React.FC<SplitScreenLayoutProps> = ({    background,    order,    pageRef,    leftContent,    rightContent,}) => {    return (        <section className={cn(sectionVariants({ background }))} ref={pageRef}>            <div className={cn(splitVariants({ order }))}>                <div className={`order-2 size-full flex-1 md:order-1`}>                    {leftContent}                </div>                <div className={`order-1 size-full flex-1 md:order-2`}>                    {rightContent}                </div>            </div>        </section>    );};