import { cva, type VariantProps } from 'class-variance-authority';import * as React from 'react';import { cn } from '@/utils/cn';const layoutVariants = cva('', {    variants: {        layoutVariant: {            col: 'flex flex-col',            row: 'flex flex-row',        },        subtitleVariant: {            subLight:                'font-[SuisseIntl-Regular] text-base font-normal uppercase leading-tight text-[#84936e]',        },        titleVariant: {            titleLight:                'font-[TWKEverett-Light] text-4xl font-light leading-[76.80px] text-[#164a49]',        },        paragraphVariant: {            paraLight:                'font-[SuisseIntl-Regular] text-lg font-normal leading-[27px] text-[#164a49]/70',        },    },    defaultVariants: {        layoutVariant: 'col',        subtitleVariant: 'subLight',        titleVariant: 'titleLight',        paragraphVariant: 'paraLight',    },});export type SectionTitleProps = VariantProps<typeof layoutVariants> & {    subtitle?: string;    title?: string;    paragraph?: string;};export const SectionTitle: React.FC<SectionTitleProps> = ({    layoutVariant,    subtitleVariant,    titleVariant,    paragraphVariant,    title,    subtitle,    paragraph,}) => {    return (        <div className={cn(layoutVariants({ layoutVariant }))}>            {subtitle && (                <h3                    className={cn(                        layoutVariants({                            subtitleVariant,                        }),                    )}                >                    {subtitle}                </h3>            )}            {title && (                <h1 className={cn(layoutVariants({ titleVariant }))}>                    {title}                </h1>            )}            {paragraph && (                <p className={cn(layoutVariants({ paragraphVariant }))}>                    {paragraph}                </p>            )}        </div>    );};