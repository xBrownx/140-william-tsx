import React from 'react';import headerLogo from '@/assets/header-logo.svg';import { Button } from '@/components/ui/button';import { Link } from '@/components/ui/link';import { useNavigationContext } from '@/context/navigation-context';import { headerConst } from 'src/constants';const links = headerConst.links;type Key = keyof typeof links;const Logo = () => {    const { navigateToPage } = useNavigationContext();    return (        <Link onClick={() => navigateToPage('landing')}>            <img src={headerLogo} alt="business-logo" />        </Link>    );};type NavLinkProps = {    propKey: string;};const NavLink: React.FC<NavLinkProps> = ({ propKey }) => {    const { navigateToPage } = useNavigationContext();    return (        <Link            onClick={() => {                console.log('you clicked me');                navigateToPage(propKey);            }}        >            <span                className={`inline-block bg-nav-gradient bg-nav-size bg-left-bottom bg-no-repeat pb-[2px] font-secondaryRegular text-lg font-normal text-white [transition:background-size_0.5s,_background-position_0s_0.5s] hover:bg-nav-size-hover hover:bg-right-bottom `}            >                {links[propKey as Key].text}            </span>        </Link>    );};const NavButton: React.FC<NavLinkProps> = ({ propKey }) => {    const { navigateToPage } = useNavigationContext();    return (        <Button            className={`group relative flex w-fit overflow-hidden rounded-lg border border-white bg-transparent px-6 py-2 after:absolute after:inset-x-0 after:-top-full after:bottom-full after:z-[-1] after:block after:bg-button-primary after:px-2 after:py-4 after:transition-all after:duration-300 after:content-[''] hover:bg-transparent hover:after:inset-x-0 after:hover:bottom-0 hover:after:top-0`}            onClick={() => navigateToPage(propKey)}        >            <p                className={`duration-[0.35s] z-50 m-0 bg-transparent p-0 font-secondaryRegular text-lg font-normal text-white transition-all group-hover:text-white`}            >                {links[propKey as Key].text}            </p>        </Button>    );};export const HeaderLayout: React.FC = () => {    return (        <div className="fixed z-40 box-border h-[5.625rem] w-full overflow-hidden px-8">            <div className="box-border flex size-full flex-row items-center justify-between overflow-hidden">                <Logo />                <div className="box-border hidden size-full items-center justify-end lg:flex">                    <ul className={`flex flex-row items-center gap-8`}>                        {Object.keys(links).map((key) => {                            return (                                <li key={key}>                                    {links[key as Key].type === 'link' ? (                                        <NavLink propKey={key} />                                    ) : (                                        <NavButton propKey={key} />                                    )}                                </li>                            );                        })}                    </ul>                </div>            </div>        </div>    );};